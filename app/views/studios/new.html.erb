<h1>New Studio</h1>
<p>
  A studio is a space where your team can create notes, decisions, and commitments that are automatically organized into time periods called <strong>cycles</strong>.
</p>
<p>
  Within a studio, <strong>backlinks</strong> are tracked and displayed both on the studio homepage and on the pages of the linked items. This makes it easy to navigate between related items and see how they are connected.
</p>
<p>
  You can also <strong>pin</strong> items to the studio homepage for visibility and quick access.
</p>
<p>
  Studios are private by default. Once created, you can invite others to join your studio.
</p>
<%= form_with(url: '/studios') do |form| %>
  <h2>Studio Name</h2>
  <p>
    The studio name is displayed at the top of the studio homepage.
  <p>
    <%= form.text_field :name, placeholder: 'Studio Name' %>
  </p>

  <h2>Studio Handle</h2>
  <p style="margin-bottom:0;">
    The studio handle determines the studio's URL path: <code><%= request.protocol %><%= request.host %>/s/<strong id="handle-example">handle</strong></code>
    <br/>
    Only lowercase letters, numbers, and hyphens are allowed.
  </p>
  <p>
    <span id="already-taken-message" style="display:block;opacity:0;height:1.6em;font-size:0.8em;color:red;">That handle is already taken.</span>
    <%= form.text_field :handle, placeholder: 'handle', id: 'handle-input' %>
  </p>
  <script>
    const handleInput = document.getElementById('handle-input');
    const handleExample = document.getElementById('handle-example');
    const alreadyTakenMessage = document.getElementById('already-taken-message');
    const validateHandle = function(handle) {
      return /^[a-z0-9-]+$/.test(handle);
    };
    const checkIfAvailable = function(handle) {
      return fetch('/studios/available?handle=' + handle)
        .then(response => response.json())
        .then(data => {
          if (data.available && handleInput.value === handle) {
            handleExample.innerText = handle;
            handleExample.style.textDecoration = 'none';
            alreadyTakenMessage.style.opacity = 0;
            handleInput.style.backgroundColor = 'inherit';
          } else if (!data.available && handleInput.value === handle) {
            handleExample.innerText = handle;
            handleExample.style.textDecoration = 'line-through';
            alreadyTakenMessage.style.opacity = 1;
            handleInput.style.backgroundColor = 'rgba(255,0,0,0.3)';
          } else {
            // noop
          }
        });
    };
    handleInput.addEventListener('input', function() {
      const handle = handleInput.value;
      if (validateHandle(handle)) {
        checkIfAvailable(handle)
      } else {
        handleInput.value = handle.replace(/[^a-z0-9-]/g, '');
      }
    });
  </script>

  <hr style="height:1px;" />
  <%= form.submit 'Create Studio' %>
<% end %>
