<h1>New Studio</h1>
<p>
  Studios are private by default. Once created, you can invite others to join your studio.
</p>
<%= form_with(url: '/studios') do |form| %>
  <h2>Studio Name</h2>
  <p>
    The studio name is displayed at the top of the studio homepage.
  </p>
  <p>
    <%= form.text_field :name, placeholder: 'Studio Name' %>
  </p>

  <h2>Studio Handle</h2>
  <p style="margin-bottom:0;">
    The studio handle determines the studio's URL path: <code><%= request.protocol %><%= request.host %>/s/<strong id="handle-example">handle</strong></code>
    <br/>
    Only lowercase letters, numbers, and hyphens are allowed.
  </p>
  <p>
    <span id="already-taken-message" style="display:block;opacity:0;height:1.6em;font-size:0.8em;color:red;">That handle is already taken.</span>
    <%= form.text_field :handle, placeholder: 'handle', id: 'handle-input' %>
  </p>
  <script>
    const handleInput = document.getElementById('handle-input');
    const handleExample = document.getElementById('handle-example');
    const alreadyTakenMessage = document.getElementById('already-taken-message');
    const validateHandle = function(handle) {
      return /^[a-z0-9-]+$/.test(handle);
    };
    const checkIfAvailable = function(handle) {
      return fetch('/studios/available?handle=' + handle)
        .then(response => response.json())
        .then(data => {
          if (data.available && handleInput.value === handle) {
            handleExample.innerText = handle;
            handleExample.style.textDecoration = 'none';
            alreadyTakenMessage.style.opacity = 0;
            handleInput.style.backgroundColor = 'inherit';
          } else if (!data.available && handleInput.value === handle) {
            handleExample.innerText = handle;
            handleExample.style.textDecoration = 'line-through';
            alreadyTakenMessage.style.opacity = 1;
            handleInput.style.backgroundColor = 'rgba(255,0,0,0.3)';
          } else {
            // noop
          }
        });
    };
    handleInput.addEventListener('input', function() {
      const handle = handleInput.value;
      if (validateHandle(handle)) {
        checkIfAvailable(handle)
      } else {
        handleInput.value = handle.replace(/[^a-z0-9-]/g, '');
      }
    });
  </script>

  <h2>Time Zone</h2>
  <p>
    The studio time zone determines when cycles begin and end.
  </p>
  <p>
    <%= form.time_zone_select :timezone %>
  </p>

  <h2>Tempo</h2>

  <p>
    How frequently should studio members check in (approximately)?
  </p>
  <p>
    This determines the primary cycle duration.
  </p>
  <p>
    <%= form.select :tempo, [['Daily', 'daily'], ['Weekly', 'weekly'], ['Monthly', 'monthly']] %>
  </p>

  <h2>Synchronization Mode</h2>

  <p>
    Which metaphor best describes how your studio will be organized?
  </p>
  <p>
    This determines default permissions for new members. You can always change these settings later.
  </p>
  <p>
    <fieldset>
      <label>
        <%= form.radio_button :synchronization_mode, 'improv', checked: true %>
        <strong>Improv</strong> (no formal leadership roles)
      </label>
      <br/>
      <label>
        <%= form.radio_button :synchronization_mode, 'orchestra', checked: false %>
        <strong>Orchestra</strong> (has formal leadership roles)
      </label>
    </fieldset>
  </p>

  <hr style="height:1px;" />
  <%= form.submit 'Create Studio' %>
<% end %>
